"use strict";function Enum(t,e,i){if(ReflectionObject.call(this,t,i),e&&"object"!=typeof e)throw TypeError("values must be an object");if(this.valuesById={},this.values=Object.create(this.valuesById),this.comments={},e)for(var s=Object.keys(e),r=0;r<s.length;++r)"number"==typeof e[s[r]]&&(this.valuesById[this.values[s[r]]=e[s[r]]]=s[r])}module.exports=Enum;var ReflectionObject=require("./object");((Enum.prototype=Object.create(ReflectionObject.prototype)).constructor=Enum).className="Enum";var util=require("./util");Enum.fromJSON=function(t,e){return new Enum(t,e.values,e.options)},Enum.prototype.toJSON=function(){return{options:this.options,values:this.values}},Enum.prototype.add=function(t,e,i){if(!util.isString(t))throw TypeError("name must be a string");if(!util.isInteger(e))throw TypeError("id must be an integer");if(void 0!==this.values[t])throw Error("duplicate name");if(void 0!==this.valuesById[e]){if(!this.options||!this.options.allow_alias)throw Error("duplicate id");this.values[t]=e}else this.valuesById[this.values[t]=e]=t;return this.comments[t]=i||null,this},Enum.prototype.remove=function(t){if(!util.isString(t))throw TypeError("name must be a string");var e=this.values[t];if(void 0===e)throw Error("name does not exist");return delete this.valuesById[e],delete this.values[t],delete this.comments[t],this};