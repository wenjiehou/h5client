"use strict";function codegen(){function e(){for(var n=[],c=0;c<arguments.length;)n.push(arguments[c++]);var s=sprintf.apply(null,n),u=t;if(r.length){var a=r[r.length-1];blockOpenRe.test(a)?u=++t:branchRe.test(a)&&++u,casingRe.test(a)&&!casingRe.test(s)?(u=++t,o=!0):o&&breakRe.test(a)&&(u=--t,o=!1),blockCloseRe.test(s)&&(u=--t)}for(c=0;c<u;++c)s="\t"+s;return r.push(s),e}for(var n=[],r=[],t=1,o=!1,c=0;c<arguments.length;)n.push(arguments[c++]);return e.str=function(e){return"function"+(e?" "+e.replace(/[^\w_$]/g,"_"):"")+"("+n.join(",")+") {\n"+r.join("\n")+"\n}"},e.eof=function(n,r){"object"==typeof n&&(r=n,n=void 0);var t=e.str(n);codegen.verbose&&console.log("--- codegen ---\n"+t.replace(/^/gm,"> ").replace(/\t/g,"  "));var o=Object.keys(r||(r={}));return Function.apply(null,o.concat("return "+t)).apply(null,o.map(function(e){return r[e]}))},e}function sprintf(e){for(var n=[],r=1;r<arguments.length;)n.push(arguments[r++]);if(r=0,e=e.replace(/%([dfjs])/g,function(e,t){switch(t){case"d":return Math.floor(n[r++]);case"f":return Number(n[r++]);case"j":return JSON.stringify(n[r++]);default:return n[r++]}}),r!==n.length)throw Error("argument count mismatch");return e}module.exports=codegen;var blockOpenRe=/[{[]$/,blockCloseRe=/^[}\]]/,casingRe=/:$/,branchRe=/^\s*(?:if|}?else if|while|for)\b|\b(?:else)\s*$/,breakRe=/\b(?:break|continue)(?: \w+)?;?$|^\s*return\b/;codegen.sprintf=sprintf,codegen.supported=!1;try{codegen.supported=1===codegen("a","b")("return a-b").eof()(2,1)}catch(e){}codegen.verbose=!1;