function traverseTypes(o,e){o instanceof protobuf.Type&&e(o),o.nestedArray&&o.nestedArray.forEach(function(o){traverseTypes(o,e)})}var tape=require("tape"),protobuf=require("..");tape.test("uncommon statements",function(o){o.plan(3),protobuf.load("tests/data/uncommon.proto",function(e,t){!e&&t||o.fail(e&&e.message||"should parse without errors"),(new protobuf.Root).load("tests/data/uncommon.proto",{keepCase:!0},function(e,t){!e&&t?(o.pass("should parse without errors"),o.doesNotThrow(function(){t.resolveAll()},"should resolve without errors"),o.doesNotThrow(function(){traverseTypes(t,function(o){o.setup()})},"should setup all types without errors"),o.end()):o.fail(e&&e.message||"should parse without errors")})})});