var tape=require("tape"),protobuf=require("../..");tape.test("load sync",function(o){var t=protobuf.loadSync("tests/data/common.proto");o.ok(t.lookup("Something"),"should parse message Something"),o.throws(function(){protobuf.loadSync("tests/data/__NOTFOUND__",t)},Error,"should throw if not found");var r=protobuf.util.isNode;try{protobuf.util.isNode=!1,o.throws(function(){protobuf.loadSync("tests/data/common.proto")},"should throw when not running under node")}finally{protobuf.util.isNode=r}o.throws(function(){protobuf.loadSync("tests/data/invalid.proto")},Error,"should throw when trying to load an invalid proto"),o.throws(function(){protobuf.loadSync("tests/data/invalid.json")},Error,"should throw when trying to load invalid json"),t=protobuf.loadSync("tests/data/weak.proto"),o.ok(t.files.indexOf("tests/data/NOT_FOUND")>-1,"should ignore missing weak protos and remember them"),o.ok(t.files.indexOf("google/protobuf/any.proto")>-1,"should still load other protos when ignoring weak protos"),o.end()});