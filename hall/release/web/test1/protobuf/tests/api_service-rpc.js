var tape=require("tape"),protobuf=require(".."),proto='syntax = "proto3";package myservice;message DoSomethingRequest {}message DoSomethingResponse {}service MyService {  rpc DoSomething(DoSomethingRequest) returns (DoSomethingResponse) {    option (google.api.http) = {      get: "/v1/dosomething"    };  };}';tape.test("reflected services",function(e){var o=protobuf.parse(proto).root.lookup("myservice").resolveAll(),t=o.MyService,r=o.DoSomethingRequest,n=o.DoSomethingResponse,u=t.get("DoSomething");e.throws(function(){t.create()},TypeError,"should throw if rpcImpl is not specified");var i=t.create(function(o,t,r){t?(e.equal(o,u,"rpcImpl should reference the correct method"),e.ok(r,"rpcImpl should provide a callback"),setTimeout(function(){r(null,n.create())})):(e.equal(o,null,"rpcImpl should not reference a method when closed"),e.equal(r,null,"rpcImpl should not provide a callback when closed"))});e.throws(function(){i.doSomething()},TypeError,"should throw if request is not specified"),e.test(e.name+" - should propagate errors from rpcImpl",function(e){var o=Error(),r=t.create(function(e,t,r){r(o)}),n=0;r.on("error",function(t){e.equal(t,o,"should emit the exact error"),2==++n&&e.end()}),r.doSomething({},function(t){e.equal(t,o,"should return the exact error"),2==++n&&e.end()})}),e.test(e.name+" - should catch errors within rpcImpl",function(e){var o=Error(),r=t.create(function(e,t,r){throw o}),n=0;r.on("error",function(t){e.equal(t,o,"should emit the exact error"),2==++n&&e.end()}),r.doSomething({},function(t){e.equal(t,o,"should return the exact error"),2==++n&&e.end()})}),e.test(e.name+" - should return errors from decoding",function(e){var o=t.create(function(e,o,t){t(null,protobuf.util.newBuffer(0))},!0,!0),r=0;o.on("error",function(o){e.ok(o,"should emit the error"),2==++r&&e.end()}),o.doSomething({},function(o){e.ok(o,"should return the error"),2==++r&&e.end()})});var s=!1;i.on("data",function(o){s=!0,e.ok(o,"should emit the data event")});var c=!1;i.on("end",function(){e.notOk(c,"should not emit the end event twice"),c=!0,e.pass("should call the end event"),i.end(),e.end()}),i.doSomething(r.create(),function(o,t){e.notOk(o,"should not raise an error"),e.ok(t instanceof n.ctor,"should return a properly typed response"),e.ok(s,"should have emitted the data event"),i.end()})});