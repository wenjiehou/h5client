function expect(e,n){var o,t=tokenize(e),l=[];do{l.push(o=t.next())}while(null!==o);if(l.length!==n.length)return!1;for(var r=0;r<n.length;++r)if(l[r]!==n[r])return!1;return!0}function expectError(e){var n=tokenize(e);try{for(;n.next(););return null}catch(e){return e}}var tape=require("tape"),protobuf=require(".."),tokenize=protobuf.tokenize;tape.test("tokenize",function(e){e.test(e.name+" - unescape",function(e){e.equal(tokenize.unescape("\\\\0 \\\0 \\0 \0"),"\\0  \0 \0","should propery unescape zero-sequences"),e.equal(tokenize.unescape("\\\t\\t\\r\\n"),"\t\r\n","should propery unescape tabs and line feeds"),e.end()}),e.ok(expect("",[null]),"should instantly finish for an empty source"),e.ok(expect("'hello\\nworld'",["'","hello\nworld","'",null]),"should parse single quoted strings"),e.ok(expect('"hello\\nworld"',['"',"hello\nworld",'"',null]),"should parse double quoted strings"),e.ok(expectError('"as"d"'),"should throw for invalid strings");var n=tokenize("message Test {}");e.throws(function(){n.skip("somethingelse",!1)},Error,"should throw when skipping non-optional tokens"),e.doesNotThrow(function(){n.skip("somethingelse",!0)},Error,"should not throw when skipping optional tokens"),n=tokenize("// line comment"),e.equal(n.next(),null,"should skip line comments on a single line"),n=tokenize("/// line comment\n"),e.equal(n.cmnt(1),"line comment","should peek for trailing line comments when on the next line"),n=tokenize("/* block comment */"),e.equal(n.next(),null,"should skip block comments on a single line"),(n=tokenize("/// line comment\na\n")).next(),e.equal(n.cmnt(1),"line comment","should keep leading comments around while on the next line"),e.ok(expectError("something; /"),"should throw for unterminated line comments"),e.ok(expectError("something; /* comment"),"should throw for unterminated block comments"),e.ok(expectError("something; /* comment *"),"should throw for unterminated block comments"),e.ok(expect("a / / b",["a","/","/","b",null]),"should not misinterpret single slashes as a comment"),e.end()});